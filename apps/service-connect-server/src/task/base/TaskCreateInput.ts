/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  IsDate,
  IsEnum,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { EnumTaskStatus } from "./EnumTaskStatus";
import { BookingCreateNestedManyWithoutTasksInput } from "./BookingCreateNestedManyWithoutTasksInput";
import { MessageCreateNestedManyWithoutTasksInput } from "./MessageCreateNestedManyWithoutTasksInput";
import { ReviewCreateNestedManyWithoutTasksInput } from "./ReviewCreateNestedManyWithoutTasksInput";

@InputType()
class TaskCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  dueDate?: Date | null;

  @ApiProperty({
    required: false,
    enum: EnumTaskStatus,
  })
  @IsEnum(EnumTaskStatus)
  @IsOptional()
  @Field(() => EnumTaskStatus, {
    nullable: true,
  })
  status?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  serviceProvider?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  customer?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  createdBy?: string | null;

  @ApiProperty({
    required: false,
    type: () => BookingCreateNestedManyWithoutTasksInput,
  })
  @ValidateNested()
  @Type(() => BookingCreateNestedManyWithoutTasksInput)
  @IsOptional()
  @Field(() => BookingCreateNestedManyWithoutTasksInput, {
    nullable: true,
  })
  bookings?: BookingCreateNestedManyWithoutTasksInput;

  @ApiProperty({
    required: false,
    type: () => MessageCreateNestedManyWithoutTasksInput,
  })
  @ValidateNested()
  @Type(() => MessageCreateNestedManyWithoutTasksInput)
  @IsOptional()
  @Field(() => MessageCreateNestedManyWithoutTasksInput, {
    nullable: true,
  })
  messages?: MessageCreateNestedManyWithoutTasksInput;

  @ApiProperty({
    required: false,
    type: () => ReviewCreateNestedManyWithoutTasksInput,
  })
  @ValidateNested()
  @Type(() => ReviewCreateNestedManyWithoutTasksInput)
  @IsOptional()
  @Field(() => ReviewCreateNestedManyWithoutTasksInput, {
    nullable: true,
  })
  reviews?: ReviewCreateNestedManyWithoutTasksInput;
}

export { TaskCreateInput as TaskCreateInput };
